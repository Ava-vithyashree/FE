[{"C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\index.js":"1","C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\App.js":"2","C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\component\\forklift_form.jsx":"4","C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\component\\forklift_grid.jsx":"5","C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\Api\\service.js":"6","C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\Api\\client.js":"7"},{"size":535,"mtime":1680095544859,"results":"8","hashOfConfig":"9"},{"size":647,"mtime":1680864283574,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1680095544897,"results":"11","hashOfConfig":"9"},{"size":12669,"mtime":1680095544986,"results":"12","hashOfConfig":"9"},{"size":6646,"mtime":1680095545001,"results":"13","hashOfConfig":"9"},{"size":2647,"mtime":1680095544969,"results":"14","hashOfConfig":"9"},{"size":289,"mtime":1680095544941,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1agenvp",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\index.js",[],[],"C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\App.js",[],[],"C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\component\\forklift_form.jsx",["39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67"],[],"//PC_NO_1\r\n//Importing the packages,functions.\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {useNavigate,useParams} from 'react-router-dom';\r\nimport {getServiceCenterData,getTrailerDetailsById,insertTrailerDetails,updateTrailerDetails} from '../Api/service';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment/moment';\r\n\r\n\r\n//PC_NO_3\r\nfunction ForkliftForm() {\r\n\r\n    //Creating instance variable for usenavigation() and useParams()\r\n    let navigation = useNavigate();\r\n    let params = useParams();\r\n    // console.log('p',)\r\n\r\n    let trailerDetailsObject =\r\n    {\r\n        'TrailerNumber' : '',\r\n        'ServiceCenterId' : '',\r\n        'Supervisor' : '',\r\n        'AccidentDate' : '',\r\n        'AccidentTime' : '',\r\n        'TrailerArrivedFrom' : '',\r\n        'DriverName' : '',\r\n        'LiftTruckNumber' : '',\r\n        'OperatorName' : '',\r\n        'DescriptionOfDamage' : '',\r\n        'DescriptionOfWhatHappened': '',\r\n        'ServiceCenterName' : ''\r\n    };\r\n\r\n    let trailerDetailsObjectError =\r\n    {\r\n        'TrailerNumberError' : '',\r\n        'ServiceCenterIdError' : '',\r\n        'SupervisorError' : '',\r\n        'AccidentDateError' : '',\r\n        'AccidentTimeError' : '',\r\n        'TrailerArrivedFromError' : '',\r\n        'DriverNameError' : '',\r\n        'LiftTruckNumberError' : '',\r\n        'OperatorNameError' : '',\r\n        'DescriptionOfDamageError' : '',\r\n        'DescriptionOfWhatHappenedError': '',\r\n    }\r\n\r\n    //PC_NO_4\r\n    //Initailzing the State Variable\r\n    const [trailerDetails,setTrailerDetails] = useState(trailerDetailsObject);\r\n    const [trailerDetailsError, setTrailerDetailsError] = useState(trailerDetailsObjectError)\r\n    const [serviceCenterData,setserviceCenterData] = useState([]);\r\n\r\n    //PC_NO_5\r\n    //Initailzing useEffect Hook with empty dependency\r\n    useEffect(() => {\r\n        pageLoad();\r\n    },[]);\r\n\r\n    //PC_NO_6\r\n    //Creating function to load the Form page.\r\n    async function pageLoad()\r\n    {\r\n        let dropDownData = await getServiceCenterData();\r\n        setserviceCenterData(dropDownData);\r\n        if(params.id != undefined)\r\n        {\r\n            let result = await getTrailerDetailsById(params.id);\r\n            setTrailerDetails(result[0]);\r\n        }\r\n    }\r\n\r\n    //PC_NO_18\r\n    //Service Center Data Binding in dropdown\r\n    const generateServiceCenterDetails = () => {\r\n        return serviceCenterData.map((obj, index) => {\r\n            return (\r\n                <option value={obj.ServiceCenterId} selected={(trailerDetails.ServiceCenterId === obj.ServiceCenterId) ? true : false}>{obj.ServiceCenterName}</option>\r\n            )\r\n        })\r\n    };\r\n\r\n    //PC_NO_23\r\n    // Creating function to handle the input values.\r\n    function inputHandler(event)\r\n    {\r\n        setTrailerDetails({...trailerDetails,[event.target.name] : event.target.value});\r\n    }\r\n    console.log(\"tt\",trailerDetails);\r\n\r\n    //PC_NO_26\r\n    //Validation \r\n    function validation()\r\n    {\r\n        let result= true;\r\n        if(trailerDetails.ServiceCenterId == \"\")\r\n        {\r\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"ServiceCenterIdError\" : \"Select any option\"}));\r\n            result = false;\r\n        }\r\n        if(trailerDetails.Supervisor == \"\")\r\n        {\r\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"SupervisorError\" : \"Enter Supervisor\"}));\r\n            result = false;\r\n        }\r\n        if(trailerDetails.TrailerNumber == \"\")\r\n        {\r\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"TrailerNumberError\" : \"Enter Trailer Number\"}));\r\n            result = false;\r\n        }\r\n        if(trailerDetails.AccidentDate == \"\")\r\n        {\r\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"AccidentDateError\" : \"Enter Accident Date\"}));\r\n            result = false;\r\n        }\r\n        if(trailerDetails.AccidentTime == \"\")\r\n        {\r\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"AccidentTimeError\" : \"Enter Accident Time\"}));\r\n            result = false;\r\n        }\r\n        if(trailerDetails.TrailerArrivedFrom == \"\")\r\n        {\r\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"TrailerArrivedFromError\" : \"Enter Trailer Arrived From\"}));\r\n            result = false;\r\n        }\r\n        if(trailerDetails.DriverName == \"\")\r\n        {\r\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"DriverNameError\" : \"Enter Driver Name \"}));\r\n            result = false;\r\n        }\r\n        if(trailerDetails.LiftTruckNumber == \"\")\r\n        {\r\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"LiftTruckNumberError\" : \"Enter Lift Truck Number\"}));\r\n            result = false;\r\n        }\r\n        if(trailerDetails.OperatorName == \"\")\r\n        {\r\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"OperatorNameError\" : \"Enter Operator Name\"}));\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    //PC_NO_25\r\n    //submiting the form\r\n    async function submitForm() {\r\n        if(params.id == undefined && validation())\r\n        {\r\n            console.log(\"trailerDetails\",trailerDetails);\r\n            const result = await insertTrailerDetails(trailerDetails);\r\n            console.log(\"result\",result)\r\n            if(result.rowsAffected[0] == 1)\r\n            {\r\n                window.alert(\"Inserted Sucessfully\");\r\n                navigation('/grid');\r\n            }\r\n        }\r\n        else if(params.id != undefined && validation())\r\n        {\r\n            const result = await updateTrailerDetails(trailerDetails);\r\n           \r\n            if(result.rowsAffected[0] == 1)\r\n            {\r\n                window.alert(\"Trailer Details updated\");\r\n                navigation('/grid');\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"parent-container\">\r\n            {(params.id != undefined)?<div>\r\n            <h1>Edit Report</h1>\r\n            </div>:<div>New Report</div>}\r\n            <div className=\"sub-container\">\r\n                <div className=\"child-container\">\r\n                    <label className=\"label-style\">Service Center<span className=\"color-indication\">*</span></label>\r\n                    <select className=\"inputbox-style\" name=\"ServiceCenterId\" onChange={(e)=>inputHandler(e)} disabled={(params.view != undefined) ? true :false}>\r\n                        <option value =\"\">Select</option>\r\n                        {generateServiceCenterDetails()}\r\n                    </select>\r\n                    <span className=\"color-indication\">{trailerDetailsError.ServiceCenterIdError}</span>\r\n                </div>\r\n                <div className=\"child-container\">\r\n                    <label className=\"label-style\">Supervisor<span className=\"color-indication\">*</span></label>\r\n                    <input type=\"text\" className=\"inputbox-style\" name=\"Supervisor\" placeholder=\"Supervisor\" value={trailerDetails.Supervisor} onChange={(e)=>inputHandler(e)} disabled={(params.view != undefined) ? true :false} />\r\n                    <span className=\"color-indication\">{trailerDetailsError.SupervisorError}</span>\r\n                </div>\r\n                <div className=\"child-container\">\r\n                    <label className=\"label-style\">Trailer Number<span className=\"color-indication\">*</span></label>\r\n                    <input type=\"number\" className=\"inputbox-style\" name=\"TrailerNumber\" placeholder=\"Enter Trailer Number\" value={trailerDetails.TrailerNumber} onChange={(e)=>inputHandler(e)} disabled={(params.id != undefined) ? true :false} />\r\n                    <span className=\"color-indication\">{trailerDetailsError.TrailerNumberError}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sub-container\">\r\n                <div className=\"child-container\">\r\n                    <label className=\"label-style\">Accident Date<span className=\"color-indication\">*</span></label>\r\n                    <input type=\"date\" className=\"inputbox-style\" name=\"AccidentDate\" value={moment(trailerDetails.AccidentDate).format(\"yyyy-MM-DD\")} onChange={(e)=>inputHandler(e)} disabled={(params.view != undefined) ? true :false} />\r\n                    <span className=\"color-indication\">{trailerDetailsError.AccidentDateError}</span>\r\n                </div>\r\n                <div className=\"child-container\">\r\n                    <label className=\"label-style\">Accident Time<span className=\"color-indication\">*</span></label>\r\n                    <input type=\"time\" className=\"inputbox-style\" name=\"AccidentTime\" value={trailerDetails.AccidentTime} onChange={(e)=>inputHandler(e)} disabled={(params.view != undefined) ? true :false}/>\r\n                    <span className=\"color-indication\">{trailerDetailsError.AccidentTimeError}</span>\r\n                </div>\r\n                <div className=\"child-container\">\r\n                    <label className=\"label-style\">Trailer Arrived From(Service Center)<span className=\"color-indication\">*</span></label>\r\n                    <input type=\"text\" className=\"inputbox-style\" placeholder=\"Enter Trailer Arrived From\" name=\"TrailerArrivedFrom\" value={trailerDetails.TrailerArrivedFrom} onChange={(e)=>inputHandler(e)} disabled={(params.view != undefined) ? true :false}/>\r\n                    <span className=\"color-indication\">{trailerDetailsError.TrailerArrivedFromError}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sub-container\">\r\n                <div className=\"child-container\">\r\n                    <label className=\"label-style\">Driver/Jockey Name<span className=\"color-indication\">*</span></label>\r\n                    <input type=\"text\" className=\"inputbox-style\" placeholder=\"Enter Driver/Jockey Name\" name=\"DriverName\" value={trailerDetails.DriverName} onChange={(e)=>inputHandler(e)} disabled={(params.view != undefined) ? true :false} />\r\n                    <span className=\"color-indication\">{trailerDetailsError.DriverNameError}</span>\r\n                </div>\r\n                <div className=\"child-container\">\r\n                    <label className=\"label-style\">Lift Truck Number<span className=\"color-indication\">*</span></label>\r\n                    <input type=\"number\" className=\"inputbox-style\" placeholder=\"Enter Lift Truck Number\" name=\"LiftTruckNumber\" value={trailerDetails.LiftTruckNumber} onChange={(e)=>inputHandler(e)} disabled={(params.view != undefined) ? true :false} />\r\n                    <span className=\"color-indication\">{trailerDetailsError.LiftTruckNumberError}</span>\r\n                </div>\r\n                <div className=\"child-container\">\r\n                    <label className=\"label-style\">Fork Lift Operator Name<span className=\"color-indication\">*</span></label>\r\n                    <input type=\"text\" className=\"inputbox-style\" placeholder=\"Enter Operator Name\" name=\"OperatorName\" value={trailerDetails.OperatorName} onChange={(e)=>inputHandler(e)} disabled={(params.view != undefined) ? true :false} />\r\n                    <span className=\"color-indication\">{trailerDetailsError.OperatorNameError}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sub-container\">\r\n                <div className=\"description-container\">\r\n                    <label className=\"label-style\">Description of Damage</label>\r\n                    <textarea className=\"textarea-style\" name=\"DescriptionOfDamage\" rows=\"4\" placeholder=\"Enter details\" value={trailerDetails.DescriptionOfDamage} onChange={(e)=>inputHandler(e)} disabled={(params.view != undefined) ? true :false} />\r\n                </div>\r\n                <div className=\"description-container\">\r\n                    <label className=\"label-style\">Description of what happened?</label>\r\n                    <textarea className=\"textarea-style\" rows=\"4\" name=\"DescriptionOfWhatHappened\" value={trailerDetails.DescriptionOfWhatHappened} placeholder=\"Enter details\" onChange={(e)=>inputHandler(e)} disabled={(params.view != undefined) ? true :false} />\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"btn\">\r\n               <Link to =\"/grid\"><button type=\"button\" className=\"cancel\">Cancel</button></Link>\r\n               {(params.view != undefined)?<></>:\r\n                <button type=\"button\" className=\"submit\" id=\"submitbtn\" onClick={()=>submitForm()}>{(params.id == undefined) ? \"Save\":\"Update\"}</button>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ForkliftForm;","C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\component\\forklift_grid.jsx",["68","69","70","71","72","73"],[],"// PC_NO_3\r\n// Importing required functions, packages and images.\r\nimport React, { useEffect, useState } from 'react';\r\nimport editicon from '../images/editicon.png';\r\nimport deleteicon from '../images/deleteicon.jpg';\r\nimport { Link } from \"react-router-dom\";\r\nimport { getTrailerDetails, deleteTrailerDetailsById} from '../Api/service';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from 'moment/moment';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n//PC_NO_11\r\n// Creating a component function\r\nfunction ForkliftGrid() {\r\n\r\n    //Creating instance variable for useNavigatiom()\r\n    let navigation = useNavigate();\r\n\r\n    //Initializing State Variable\r\n    const [trailerDetails, setTrailerDetails] = useState([]);\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [page, setPage] = useState(0);\r\n    const [totalCount, setTotalCount] = useState(0);\r\n    const [order,setOrder] = useState('');\r\n    const perPageValue = 4\r\n    const totalPages = Math.ceil(totalCount / perPageValue);\r\n\r\n\r\n    // Initializing useEffect\r\n    useEffect(() => {\r\n\r\n        // Function for populating Trailer Details\r\n        populateTrailerDetails(page,order);\r\n\r\n    }, [])\r\n\r\n    // PC_NO_12\r\n    // Creating function to get all the Trailer details\r\n    async function populateTrailerDetails(page,order) {\r\n        let result = await getTrailerDetails(searchValue,page,order);\r\n        setTrailerDetails(result);\r\n        if(result.length !=0)\r\n        {\r\n            setTotalCount(result[0].TotalValues)\r\n        }   \r\n    }\r\n\r\n    // PC_NO_57\r\n    // Creating a function to get the selected page value \r\n    const changePage = ({ selected }) => {\r\n        setPage(selected);\r\n        populateTrailerDetails(selected,order);\r\n    };\r\n\r\n    //PC_NO_32\r\n    //Creating a function to delete the Trailer Details\r\n    async function deleteTrailerDetails(event) {\r\n        if (window.confirm(\"Are you sure want to delete\")) {\r\n            let result = await deleteTrailerDetailsById(event.target.id);\r\n            console.log(result)\r\n            if (result.rowsAffected == 1) {\r\n                window.alert(\"deleted sucessfully\");\r\n                populateTrailerDetails(page,order);\r\n            }\r\n        }\r\n    }\r\n\r\n    //PC_NO_47\r\n    //Creating a function to edit the Trailer Details\r\n    function editTrailerDetails(event) {\r\n        navigation(`/form/${event.target.id}`);\r\n    }\r\n\r\n    //PC_NO_51\r\n    //Creating a function to handle the Serach bar\r\n    function searchHandler(event) {\r\n        setSearchValue(event.target.value);\r\n    }\r\n\r\n    //PC_NO_28\r\n    // Creating a function to bind the data in the table\r\n    const generateTrailerDetails = () => {\r\n        return trailerDetails.map((obj, index) => {\r\n            return (\r\n                <tr className='table-row'>\r\n                    <td className=\"t-data link\">{obj.ServiceCenterName}</td>\r\n                    <td className=\"t-data\">{moment(obj.CreatedDate).format('yyyy-MM-DD')}</td>\r\n                    <td className=\"t-data\">{obj.Supervisor}</td>\r\n                    <Link to ={`/form/view/${index+1}`} className=\"view\"><td className=\"t-data\">{obj.TrailerNumber}</td></Link>\r\n                    <td className=\"t-data\">{obj.DriverName}</td>\r\n                    <td className=\"t-data\">{obj.LiftTruckNumber}</td>\r\n                    <td className=\"t-data\">{obj.OperatorName}</td>\r\n                    <td className=\"t-data-center\"><img src={editicon} id={obj.TrailerNumber} className=\"icon-btn\" onClick={(event) => editTrailerDetails(event)} /><img src={deleteicon} id={obj.TrailerNumber} className=\"icon-btn\" onClick={(event) => deleteTrailerDetails(event)} /></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"parent-container\">\r\n                <div className=\"sub-container\">\r\n                    <h3 className=\"Heading\">FORKLIFT/TRAILER DAMAGE</h3>\r\n                    <div className='btn-right'>\r\n                        <input type=\"text\" className=\"searchbar-style\" placeholder=\"Search...\" onChange={(e) => searchHandler(e)} />\r\n                        <button className=\"add-btn\" onClick={() => populateTrailerDetails(0,order)}>Search</button>\r\n                        {/* PC_NO_43 */}\r\n                        <Link to=\"/form\"><button className=\"add-btn\">Create New Report</button></Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sub-container\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"table-column\">Service Center</th>\r\n                                <th className=\"table-column\">Created Date</th>\r\n                                <th className=\"table-column\">Supervisor</th>\r\n                                {/* PC_NO_61 */}\r\n                                <th className=\"table-column\">Trailer#<div class=\"btn-right\"><button className='order-btn' value=\"asc\" onClick={(event)=>{setOrder(event.target.value);populateTrailerDetails(page,event.target.value)}}>↑</button><button className='order-btn' value=\"desc\" onClick={(event)=>{setOrder(event.target.value);populateTrailerDetails(page,event.target.value)}}>↓</button></div></th>\r\n                                <th className=\"table-column\">Driver</th>\r\n                                <th className=\"table-column\">Lift#</th>\r\n                                <th className=\"table-column\">Operator</th>\r\n                                <th className=\"table-column-center\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {generateTrailerDetails()}\r\n                        </tbody>\r\n                    </table>\r\n                    {(trailerDetails.length == 0) ? <div className='Center-Style'> <h3>No Trailer Details Found!</h3> </div> : <></>}\r\n                    {(trailerDetails.length !== 0) ?\r\n                    <>\r\n                    <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    pageCount={totalPages}\r\n                    onPageChange={changePage}\r\n                    containerClassName={\"navigationButtons\"}\r\n                    previousLinkClassName={\"previousButton\"}\r\n                    nextLinkClassName={\"nextButton\"}\r\n                    disabledClassName={\"navigationDisabled\"}\r\n                    activeClassName={\"navigationActive\"}/></>:<></>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ForkliftGrid;","C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\Api\\service.js",[],[],"C:\\Users\\Vithyashree.A\\Desktop\\Fork lift management\\Frontend\\src\\Api\\client.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":59,"column":7,"nodeType":"76","endLine":59,"endColumn":9,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":67,"column":22,"nodeType":"80","messageId":"81","endLine":67,"endColumn":24},{"ruleId":"78","severity":1,"message":"82","line":97,"column":43,"nodeType":"80","messageId":"81","endLine":97,"endColumn":45},{"ruleId":"78","severity":1,"message":"82","line":102,"column":38,"nodeType":"80","messageId":"81","endLine":102,"endColumn":40},{"ruleId":"78","severity":1,"message":"82","line":107,"column":41,"nodeType":"80","messageId":"81","endLine":107,"endColumn":43},{"ruleId":"78","severity":1,"message":"82","line":112,"column":40,"nodeType":"80","messageId":"81","endLine":112,"endColumn":42},{"ruleId":"78","severity":1,"message":"82","line":117,"column":40,"nodeType":"80","messageId":"81","endLine":117,"endColumn":42},{"ruleId":"78","severity":1,"message":"82","line":122,"column":46,"nodeType":"80","messageId":"81","endLine":122,"endColumn":48},{"ruleId":"78","severity":1,"message":"82","line":127,"column":38,"nodeType":"80","messageId":"81","endLine":127,"endColumn":40},{"ruleId":"78","severity":1,"message":"82","line":132,"column":43,"nodeType":"80","messageId":"81","endLine":132,"endColumn":45},{"ruleId":"78","severity":1,"message":"82","line":137,"column":40,"nodeType":"80","messageId":"81","endLine":137,"endColumn":42},{"ruleId":"78","severity":1,"message":"82","line":149,"column":22,"nodeType":"80","messageId":"81","endLine":149,"endColumn":24},{"ruleId":"78","severity":1,"message":"82","line":154,"column":39,"nodeType":"80","messageId":"81","endLine":154,"endColumn":41},{"ruleId":"78","severity":1,"message":"79","line":160,"column":27,"nodeType":"80","messageId":"81","endLine":160,"endColumn":29},{"ruleId":"78","severity":1,"message":"82","line":164,"column":39,"nodeType":"80","messageId":"81","endLine":164,"endColumn":41},{"ruleId":"78","severity":1,"message":"79","line":177,"column":25,"nodeType":"80","messageId":"81","endLine":177,"endColumn":27},{"ruleId":"78","severity":1,"message":"79","line":183,"column":134,"nodeType":"80","messageId":"81","endLine":183,"endColumn":136},{"ruleId":"78","severity":1,"message":"79","line":191,"column":199,"nodeType":"80","messageId":"81","endLine":191,"endColumn":201},{"ruleId":"78","severity":1,"message":"79","line":196,"column":215,"nodeType":"80","messageId":"81","endLine":196,"endColumn":217},{"ruleId":"78","severity":1,"message":"79","line":204,"column":207,"nodeType":"80","messageId":"81","endLine":204,"endColumn":209},{"ruleId":"78","severity":1,"message":"79","line":209,"column":178,"nodeType":"80","messageId":"81","endLine":209,"endColumn":180},{"ruleId":"78","severity":1,"message":"79","line":214,"column":231,"nodeType":"80","messageId":"81","endLine":214,"endColumn":233},{"ruleId":"78","severity":1,"message":"79","line":222,"column":213,"nodeType":"80","messageId":"81","endLine":222,"endColumn":215},{"ruleId":"78","severity":1,"message":"79","line":227,"column":224,"nodeType":"80","messageId":"81","endLine":227,"endColumn":226},{"ruleId":"78","severity":1,"message":"79","line":232,"column":212,"nodeType":"80","messageId":"81","endLine":232,"endColumn":214},{"ruleId":"78","severity":1,"message":"79","line":240,"column":220,"nodeType":"80","messageId":"81","endLine":240,"endColumn":222},{"ruleId":"78","severity":1,"message":"79","line":244,"column":232,"nodeType":"80","messageId":"81","endLine":244,"endColumn":234},{"ruleId":"78","severity":1,"message":"79","line":250,"column":30,"nodeType":"80","messageId":"81","endLine":250,"endColumn":32},{"ruleId":"78","severity":1,"message":"82","line":251,"column":112,"nodeType":"80","messageId":"81","endLine":251,"endColumn":114},{"ruleId":"74","severity":1,"message":"83","line":35,"column":8,"nodeType":"76","endLine":35,"endColumn":10,"suggestions":"84"},{"ruleId":"78","severity":1,"message":"79","line":42,"column":26,"nodeType":"80","messageId":"81","endLine":42,"endColumn":28},{"ruleId":"78","severity":1,"message":"82","line":61,"column":37,"nodeType":"80","messageId":"81","endLine":61,"endColumn":39},{"ruleId":"85","severity":1,"message":"86","line":93,"column":51,"nodeType":"87","endLine":93,"endColumn":164},{"ruleId":"85","severity":1,"message":"86","line":93,"column":164,"nodeType":"87","endLine":93,"endColumn":281},{"ruleId":"78","severity":1,"message":"82","line":131,"column":45,"nodeType":"80","messageId":"81","endLine":131,"endColumn":47},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pageLoad'. Either include it or remove the dependency array.","ArrayExpression",["88"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'order', 'page', and 'populateTrailerDetails'. Either include them or remove the dependency array.",["89"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [pageLoad]",{"range":"94","text":"95"},"Update the dependencies array to be: [order, page, populateTrailerDetails]",{"range":"96","text":"97"},[1889,1891],"[pageLoad]",[1192,1194],"[order, page, populateTrailerDetails]"]